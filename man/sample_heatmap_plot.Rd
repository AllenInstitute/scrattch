% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_main.R
\name{sample_heatmap_plot}
\alias{sample_heatmap_plot}
\title{Heatmaps of gene expression of individual cells}
\usage{
sample_heatmap_plot(genes = c("Hspa8", "Snap25", "Gad2", "Vip"),
  clusters = 1:10, group_by = "final", data_source = "internal",
  logscale = T, normalize_rows = F, fontsize = 7, labelheight = 25,
  max_width = 10, labeltype = "angle")
}
\arguments{
\item{genes}{A character vector containing gene symbols to be plotted}

\item{clusters}{A numeric vector containing clusters to plot (for v1_anno, the range is 1:49)}

\item{group_by}{A character object containing the annotation to group data by}

\item{data_source}{A character object defining where the data is stored. Can be a Sqlite3 database file or "internal".}

\item{logscale}{Logical object, determines if data is log scaled before plotting.}

\item{normalize_rows}{Logical object, determines if data are normalized to the maximum value for each gene. If FALSE, the heatmap is normalized to the maximum value across all genes.}

\item{fontsize}{numeric object, the font size (in pts) used to make the plot.}

\item{labelheight}{numeric object, Percent of the plot height that should be used for the labels (0 to 100).}

\item{labeltype}{A character object, either "angle" or "square".}
}
\value{
a ggplot2 plot object
}
\description{
This function will generate plots similar to those in the shiny heatmap geneterator.
Warning: this is currently only able to work with internally-supplied datasets (v1_data and v1_anno).
Extension to user-supplied datasets will come soon.
}
\examples{
heatcell_plot()

my_genes <- c("Ercc6", "Ercc8", "Trp53", "Pgbd5")
my_clusters <- c(1, 5, 9, 10, 24, 37)
my_heatcell_plot <- heatcell_plot(my_genes, my_clusters, norm=T, font=12)

ggsave("plot_output.pdf", heatcell_plot, height = 0.2 * length(my_genes) + 2, width = 4)

gene_text <- "Slc17a6 gad2 tac1,RBP4"
gene_fix <- fix_mouse_genes(split_cst(gene_text))
cluster_text <- "18:22,3,8"
cluster_fix <- chr_to_num(cluster_text)

my_heatcell_plot_2 <- heatcell_plot(gene_fix, clust = cluster_fix, font=12)
}
